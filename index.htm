<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Weather App</title>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="src/styles.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor"
      crossorigin="anonymous"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200&family=Square+Peg&display=swap"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;400;500&family=Square+Peg&display=swap"
      rel="stylesheet"
    />
    <style>
h1 {
  color: rgb(255, 255, 255);
  text-align: center;
  margin: 60px;
  margin-bottom: -10px;
  padding: 15px 0px 15px 0px;
  font-family: "Roboto Slab", serif;
  font-size: 90px;
  text-shadow: 2px 2px 4px #0e3a21;
}

h2 {
  color: rgb(13, 58, 33);
  text-align: center;
  font-family: "Square Peg", cursive;
  letter-spacing: 10px;
  font-size: 80px;
  text-transform: lowercase;
}

h3 {
  text-align: center;
  color: rgb(255, 255, 255);
}

p {
  text-align: center;
  color: rgb(13, 58, 33);
  font-family: "Roboto Slab", serif;
}

input {
  text-align: center;
}

.temperature {
  color: rgb(13, 58, 33);
  text-align: center;
  font-family: "Roboto Slab", serif;
  font-size: 30px;
  text-transform: uppercase;
  letter-spacing: 4px;
}
.day {
  color: rgb(255, 255, 255);
  text-align: center;
  font-family: "Roboto Slab", serif;
  font-size: 20px;
  text-transform: lowercase;
  letter-spacing: 4px;
}

.emoji {
  display: block;
  margin: 0 auto;
  font-size: 50px;
}
#search {
  display: block;
  margin: 20px 20px 20px 80px;
}
.container {
  border: 1px solid #08182c;
  margin: 20px auto;
  border-radius: 20px;
  max-width: 1000px;
  background: rgba(219, 231, 212, 0.6);
  backdrop-filter: saturate(180%) blur(10px);
}

      
.wind {
  color: rgb(13, 58, 33);
  font-family: "Roboto Slab", serif;
  font-size: 20px;
}
      
.cols-7,
.col {
  color: rgb(13, 58, 33);
  font-family: "Roboto Slab", serif;
  font-size: 20px;
  margin: 10px 30px 40px 30px;
}

.col-2 {
  margin: 0 auto;
  font-size: 20px;
  text-align: center;
  color: rgb(255, 255, 255);
  font-family: "Roboto Slab", serif;
}

    </style>
  </head>
  <body background="images/flower.png">
 <div class="container">
          <h1>
            weather this week
          </h1>
          <br />
          <div class="current-city">
            <h2 id="city"></h2>
          </div>
          <div class="day">
            <h3 id="date"></h3>
          </div>
          <div class="temperature">
              <span id="cur"></span>
              <span class="units">
                <a href="#" id="celsius-link">¬∞C |</a>
                <a href="#" id="fahrenheit-link">¬∞F</a>
              </span>
            </div>
             <div class="windspeed">
            <p> Wind: <span id="wind"></span> km/h</p>
          </div> 
          <form class="search-form" id="search-form">
              <div class="row">
              <div class="col-6">
                <input
                  type="search"
                  placeholder="Type a city.."
                  autofocus="on"
                  autocomplete="off"
                  id="city-input"
                  class="form-control shadow-sm"
                />
              </div>
              <div class="col-3">
                <input
                  type="submit"
                  value="Search"
                  class="form-control btn btn-primary shadow-sm w-100"
                />
              </div>
              <div class="col-3">
                  <button
                    class="btn btn-success w-100"
                    id="current-location-button">
                    Current
                  </button>
                </div>
          </form>
        </div>
          <br />
          <div class="row row-cols-7">
            <div class="col">
              Sun<br />
              <span class="emoji">‚òÅÔ∏è</span>
              <span class="temp">45¬∞</span>
            </div>
            <div class="col">
              Mon<br />
              <span class="emoji">‚òÅÔ∏è</span>
              <span class="temp">50¬∞</span>
            </div>
            <div class="col">
              Tues<br />
              <span class="emoji">‚òÅÔ∏è</span>
              <span class="temp">42¬∞</span>
            </div>
            <div class="col">
              Wed<br />
              <span class="emoji">üå•Ô∏è</span>
              <span class="temp">50¬∞</span>
            </div>
            <div class="col">
              Thurs<br />
              <span class="emoji">üåßÔ∏è</span>
              <span class="temp">40¬∞</span>
            </div>
            <div class="col">
              Fri<br />
              <span class="emoji">üåßÔ∏è</span>
              <span class="temp">42¬∞</span>
            </div>
            <div class="col">
              Sat<br />
              <span class="emoji">üåßÔ∏è</span>
              <span class="temp">54¬∞</span>
            </div>
          </div>
        </div>
        <p>
        <a href="https://github.com/oliviab-code/weatherapp"> open-source code by Olivia Battani</a>
        </p>  
     <script>
       function formatDate(date) {
  let hours = date.getHours();
  if (hours < 10) {
    hours = `0${hours}`;
  }
  let minutes = date.getMinutes();
  if (minutes < 10) {
    minutes = `0${minutes}`;
  }

  let dayIndex = date.getDay();
  let days = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ];
  let day = days[dayIndex];

  return `${day} ${hours}:${minutes}`;
}

function displayWeatherCondition(response) {
  let windElement = document.querySelector("#wind");
  windElement.innerHTML = response.data.wind.speed;
  celciusTemperature = response.data.main.temp;
  document.querySelector("#city").innerHTML = response.data.name;
  document.querySelector("#cur").innerHTML = Math.round(celciusTemperature);
}

function searchCity(city) {
  let apiKey = "aab16a7c434165eb114da586b447742a";
  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;
  axios.get(apiUrl).then(displayWeatherCondition);
}

function handleSubmit(event) {
  event.preventDefault();
  let city = document.querySelector("#city-input").value;
  searchCity(city);
}

function searchLocation(position) {
  let apiKey = "aab16a7c434165eb114da586b447742a";
  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=metric`;
  axios.get(apiUrl).then(displayWeatherCondition);
}

function getCurrentLocation(event) {
  event.preventDefault();
  navigator.geolocation.getCurrentPosition(searchLocation);
}

let searchForm = document.querySelector("#search-form");
searchForm.addEventListener("submit", handleSubmit);

let currentLocationButton = document.querySelector("#current-location-button");
currentLocationButton.addEventListener("click", getCurrentLocation);

function getFahrenheitTemperature(event) {
  event.preventDefault();
  let temperatureElement = document.querySelector("#cur");
  let fahrenheitTemperature = (celciusTemperature * 9) / 5 + 32;
  temperatureElement.innerHTML = Math.round(fahrenheitTemperature);
}

let celciusTemperature = null;

let fahrenheitLink = document.querySelector("#fahrenheit-link");
fahrenheitLink.addEventListener("click", getFahrenheitTemperature);

searchCity("philadelphia");
    </script>
  </body>
</html>
